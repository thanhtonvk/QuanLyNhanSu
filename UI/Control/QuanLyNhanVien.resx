<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="soccc.GenerateMember" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="imageNv.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>